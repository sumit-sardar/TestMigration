<?xml version='1.0' encoding='UTF-8'?>
<s0:definitions name="ClickerWSServiceDefinitions" targetNamespace="http://services" xmlns="" xmlns:s0="http://schemas.xmlsoap.org/wsdl/" xmlns:s1="http://services" xmlns:s2="http://schemas.xmlsoap.org/wsdl/soap/">
  <s0:types>
    <xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="java:dto" xmlns:xs="http://www.w3.org/2001/XMLSchema">
      <xs:complexType name="StudentResponse">
        <xs:annotation>
          <xs:documentation>/** 
 * Student response from vendor
 * Vendor needs to populate response field in Question object
 * @author Tai_Truong
 */</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" name="Assignment" nillable="true" type="java:Assignment" xmlns:java="java:dto"/>
          <xs:element minOccurs="1" name="TestId" nillable="true" type="xs:int"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Assignment">
        <xs:annotation>
          <xs:documentation>/** 
 * Session information
 * Rosters is all students in this session
 * @author Tai_Truong
 */</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" name="EndDate" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="Rosters" nillable="true" type="java:Roster" xmlns:java="java:dto"/>
          <xs:element minOccurs="1" name="SessionId" nillable="true" type="xs:int"/>
          <xs:element minOccurs="1" name="SessionName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="1" name="StartDate" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Roster">
        <xs:annotation>
          <xs:documentation>/** 
 * Roster information
 * Subtests is the list of subtests in student manifest
 * OAS populates the fields
 * @author Tai_Truong
 */</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" name="FirstName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="1" name="LastName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="1" name="LoginName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="1" name="RosterId" nillable="true" type="xs:int"/>
          <xs:element minOccurs="1" name="StudentId" nillable="true" type="xs:int"/>
          <xs:element minOccurs="1" name="StudentKey" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="Subjects" nillable="true" type="java:Subject" xmlns:java="java:dto"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Subject">
        <xs:annotation>
          <xs:documentation>/** 
 * Subtest information
 * OAS populates the fields
 * @author Tai_Truong
 */</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="Questions" nillable="true" type="java:Question" xmlns:java="java:dto"/>
          <xs:element minOccurs="1" name="SubtestId" nillable="true" type="xs:int"/>
          <xs:element minOccurs="1" name="SubtestName" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Question">
        <xs:annotation>
          <xs:documentation>/** 
 * Question information
 * OAS populates correctAnswer
 * Vendor populates response
 * @author Tai_Truong
 */</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" name="CorrectAnswer" nillable="false">
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:length value="1"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="QuestionId" nillable="true" type="xs:int"/>
          <xs:element minOccurs="1" name="Response" nillable="false">
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:length value="1"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OrgNode">
        <xs:annotation>
          <xs:documentation>/** 
 * Organization information in OAS hierarchy
 * OAS populates the fields
 * @author Tai_Truong
 */</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" name="Id" nillable="true" type="xs:int"/>
          <xs:element minOccurs="1" name="Name" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ArrayOfOrgNode_literal">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="OrgNode" nillable="true" type="java:OrgNode" xmlns:java="java:dto"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="ArrayOfOrgNode_literal" type="java:ArrayOfOrgNode_literal" xmlns:java="java:dto"/>
      <xs:complexType name="ArrayOfAssignment_literal">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="Assignment" nillable="true" type="java:Assignment" xmlns:java="java:dto"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="ArrayOfAssignment_literal" type="java:ArrayOfAssignment_literal" xmlns:java="java:dto"/>
      <xs:complexType name="ArrayOfRoster_literal">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="Roster" nillable="true" type="java:Roster" xmlns:java="java:dto"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="ArrayOfRoster_literal" type="java:ArrayOfRoster_literal" xmlns:java="java:dto"/>
    </xs:schema>
    <xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://services" xmlns:xs="http://www.w3.org/2001/XMLSchema">
      <xs:import namespace="java:dto"/>
      <xs:element name="getSessionsForNode">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="userName" type="xs:string"/>
            <xs:element minOccurs="0" name="orgNodeId" nillable="true" type="xs:int"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getSessionsForNodeResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="return" type="java:ArrayOfAssignment_literal" xmlns:java="java:dto"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getRostersInSession">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="userName" type="xs:string"/>
            <xs:element minOccurs="0" name="sessionId" nillable="true" type="xs:int"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getRostersInSessionResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="return" type="java:ArrayOfRoster_literal" xmlns:java="java:dto"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="submitStudentResponses">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="stdRes" type="java:StudentResponse" xmlns:java="java:dto"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="submitStudentResponsesResponse">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getUserTopNode">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="userName" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getUserTopNodeResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="return" type="java:OrgNode" xmlns:java="java:dto"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getChildrenNodes">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="userName" type="xs:string"/>
            <xs:element minOccurs="0" name="orgNodeId" nillable="true" type="xs:int"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getChildrenNodesResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="return" type="java:ArrayOfOrgNode_literal" xmlns:java="java:dto"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getTestStructure">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="userName" type="xs:string"/>
            <xs:element minOccurs="0" name="testId" nillable="true" type="xs:int"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getTestStructureResponse">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="authenticateUser">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="userName" type="xs:string"/>
            <xs:element name="password" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="authenticateUserResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="xs:int"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:schema>
  </s0:types>
  <s0:message name="getSessionsForNode">
    <s0:part element="s1:getSessionsForNode" name="parameters"/>
  </s0:message>
  <s0:message name="getSessionsForNodeResponse">
    <s0:part element="s1:getSessionsForNodeResponse" name="parameters"/>
  </s0:message>
  <s0:message name="getRostersInSession">
    <s0:part element="s1:getRostersInSession" name="parameters"/>
  </s0:message>
  <s0:message name="getRostersInSessionResponse">
    <s0:part element="s1:getRostersInSessionResponse" name="parameters"/>
  </s0:message>
  <s0:message name="submitStudentResponses">
    <s0:part element="s1:submitStudentResponses" name="parameters"/>
  </s0:message>
  <s0:message name="submitStudentResponsesResponse">
    <s0:part element="s1:submitStudentResponsesResponse" name="parameters"/>
  </s0:message>
  <s0:message name="getUserTopNode">
    <s0:part element="s1:getUserTopNode" name="parameters"/>
  </s0:message>
  <s0:message name="getUserTopNodeResponse">
    <s0:part element="s1:getUserTopNodeResponse" name="parameters"/>
  </s0:message>
  <s0:message name="getChildrenNodes">
    <s0:part element="s1:getChildrenNodes" name="parameters"/>
  </s0:message>
  <s0:message name="getChildrenNodesResponse">
    <s0:part element="s1:getChildrenNodesResponse" name="parameters"/>
  </s0:message>
  <s0:message name="getTestStructure">
    <s0:part element="s1:getTestStructure" name="parameters"/>
  </s0:message>
  <s0:message name="getTestStructureResponse">
    <s0:part element="s1:getTestStructureResponse" name="parameters"/>
  </s0:message>
  <s0:message name="authenticateUser">
    <s0:part element="s1:authenticateUser" name="parameters"/>
  </s0:message>
  <s0:message name="authenticateUserResponse">
    <s0:part element="s1:authenticateUserResponse" name="parameters"/>
  </s0:message>
  <s0:portType name="ClickerWS">
    <s0:operation name="getSessionsForNode" parameterOrder="parameters">
      <s0:input message="s1:getSessionsForNode"/>
      <s0:output message="s1:getSessionsForNodeResponse"/>
    </s0:operation>
    <s0:operation name="getRostersInSession" parameterOrder="parameters">
      <s0:input message="s1:getRostersInSession"/>
      <s0:output message="s1:getRostersInSessionResponse"/>
    </s0:operation>
    <s0:operation name="submitStudentResponses" parameterOrder="parameters">
      <s0:input message="s1:submitStudentResponses"/>
      <s0:output message="s1:submitStudentResponsesResponse"/>
    </s0:operation>
    <s0:operation name="getUserTopNode" parameterOrder="parameters">
      <s0:input message="s1:getUserTopNode"/>
      <s0:output message="s1:getUserTopNodeResponse"/>
    </s0:operation>
    <s0:operation name="getChildrenNodes" parameterOrder="parameters">
      <s0:input message="s1:getChildrenNodes"/>
      <s0:output message="s1:getChildrenNodesResponse"/>
    </s0:operation>
    <s0:operation name="getTestStructure" parameterOrder="parameters">
      <s0:input message="s1:getTestStructure"/>
      <s0:output message="s1:getTestStructureResponse"/>
    </s0:operation>
    <s0:operation name="authenticateUser" parameterOrder="parameters">
      <s0:input message="s1:authenticateUser"/>
      <s0:output message="s1:authenticateUserResponse"/>
    </s0:operation>
  </s0:portType>
  <s0:binding name="ClickerWSServiceSoapBinding" type="s1:ClickerWS">
    <s2:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <s0:operation name="getSessionsForNode">
      <s2:operation style="document"/>
      <s0:input>
        <s2:body parts="parameters" use="literal"/>
      </s0:input>
      <s0:output>
        <s2:body parts="parameters" use="literal"/>
      </s0:output>
    </s0:operation>
    <s0:operation name="getRostersInSession">
      <s2:operation style="document"/>
      <s0:input>
        <s2:body parts="parameters" use="literal"/>
      </s0:input>
      <s0:output>
        <s2:body parts="parameters" use="literal"/>
      </s0:output>
    </s0:operation>
    <s0:operation name="submitStudentResponses">
      <s2:operation style="document"/>
      <s0:input>
        <s2:body parts="parameters" use="literal"/>
      </s0:input>
      <s0:output>
        <s2:body use="literal"/>
      </s0:output>
    </s0:operation>
    <s0:operation name="getUserTopNode">
      <s2:operation style="document"/>
      <s0:input>
        <s2:body parts="parameters" use="literal"/>
      </s0:input>
      <s0:output>
        <s2:body parts="parameters" use="literal"/>
      </s0:output>
    </s0:operation>
    <s0:operation name="getChildrenNodes">
      <s2:operation style="document"/>
      <s0:input>
        <s2:body parts="parameters" use="literal"/>
      </s0:input>
      <s0:output>
        <s2:body parts="parameters" use="literal"/>
      </s0:output>
    </s0:operation>
    <s0:operation name="getTestStructure">
      <s2:operation style="document"/>
      <s0:input>
        <s2:body parts="parameters" use="literal"/>
      </s0:input>
      <s0:output>
        <s2:body use="literal"/>
      </s0:output>
    </s0:operation>
    <s0:operation name="authenticateUser">
      <s2:operation style="document"/>
      <s0:input>
        <s2:body parts="parameters" use="literal"/>
      </s0:input>
      <s0:output>
        <s2:body parts="parameters" use="literal"/>
      </s0:output>
    </s0:operation>
  </s0:binding>
  <s0:service name="ClickerWSService">
    <s0:port binding="s1:ClickerWSServiceSoapBinding" name="ClickerWSSoapPort">
      <s2:address location="http://localhost:7001/ClickerWebService/ClickerWS"/>
    </s0:port>
  </s0:service>
</s0:definitions>