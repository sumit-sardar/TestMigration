CREATE OR REPLACE TRIGGER "LIC_DELETE_SESSION_ORGNODE"
BEFORE DELETE
ON OAS.TEST_ROSTER 
REFERENCING OLD AS OLD
FOR EACH ROW
DECLARE
  IS_LAS_LICENSE_MGMT VARCHAR2(1);

  CURSOR CUR_IS_LAS_LICENSE_MGMT IS
    SELECT DECODE(COUNT(1), 0, 'F', 'T') AS IS_LAS_LICENSE_MGMT
      FROM CUSTOMER_CONFIGURATION
     WHERE CUSTOMER_ID = :OLD.CUSTOMER_ID
       AND CUSTOMER_CONFIGURATION_NAME = 'License_Yearly_Expiry'
       AND EXISTS
     (SELECT 1
              FROM CUSTOMER_CONFIGURATION
             WHERE CUSTOMER_ID = :OLD.CUSTOMER_ID
               AND CUSTOMER_CONFIGURATION_NAME = 'Allow_Subscription');

  -- retrieve product licensure information for the customer and product associated w/ this test roster
  CURSOR COL_CURSOR IS
    SELECT COL.CUSTOMER_ID,
           COL.PRODUCT_ID,
           COL.SUBTEST_MODEL,
           COL.AVAILABLE
      FROM TEST_ADMIN ADM, CUSTOMER_ORGNODE_LICENSE COL, PRODUCT PROD
     WHERE ADM.TEST_ADMIN_ID = :OLD.TEST_ADMIN_ID
       AND COL.ORG_NODE_ID = :OLD.ORG_NODE_ID
       AND (COL.PRODUCT_ID = PROD.PRODUCT_ID OR
           COL.PRODUCT_ID = PROD.PARENT_PRODUCT_ID OR
           COL.PRODUCT_ID =
           (SELECT FPP.FRAMEWORK_PARENT_PRODUCT_ID
               FROM FRAMEWORK_PRODUCT_PARENT FPP
              WHERE FPP.FRAMEWORK_PRODUCT_ID = PROD.PARENT_PRODUCT_ID))
       AND PROD.PRODUCT_ID = ADM.PRODUCT_ID
       AND COL.CUSTOMER_ID = ADM.CUSTOMER_ID
       AND PROD.LICENSE_ENABLED = 'T'
       FOR UPDATE OF AVAILABLE, RESERVED/* WAIT 3*/;-- Commented for defect#74612

BEGIN

  OPEN CUR_IS_LAS_LICENSE_MGMT;
  FETCH CUR_IS_LAS_LICENSE_MGMT
    INTO IS_LAS_LICENSE_MGMT;
  IF CUR_IS_LAS_LICENSE_MGMT%NOTFOUND THEN
    IS_LAS_LICENSE_MGMT := 'F';
  END IF;
  CLOSE CUR_IS_LAS_LICENSE_MGMT;

  IF IS_LAS_LICENSE_MGMT != 'F' THEN
  
    FOR COL IN COL_CURSOR LOOP
      PKG_LAS_LM_TRG.SP_DELETE_SESSION_LAS_LM_TRG(:OLD.CUSTOMER_ID,
                                                  :OLD.TEST_ROSTER_ID,
                                                  :OLD.ORG_NODE_ID,
                                                  :OLD.TEST_COMPLETION_STATUS,
                                                  COL.PRODUCT_ID,
                                                  COL.SUBTEST_MODEL);
    
    END LOOP;
  
  ELSE
  
    DELETE FROM TEMP_SISS_UPDATE TSU
     WHERE TEST_ROSTER_ID = :OLD.TEST_ROSTER_ID;
  
    IF (:OLD.TEST_COMPLETION_STATUS NOT IN ('IC', 'NT', 'CO')) THEN
      FOR COL IN COL_CURSOR LOOP
        -- ONLY RELEASE HERE IF WE'RE USING SESSION PRICING MODEL, OTHERWISE AN SISS TRIGGER WILL HANDLE THIS
        IF (COL.SUBTEST_MODEL != 'T') THEN
          -- RELEASE A LICENSE FOR THIS ROSTER
          UPDATE CUSTOMER_ORGNODE_LICENSE
             SET AVAILABLE = AVAILABLE + 1, RESERVED = RESERVED - 1
           WHERE CURRENT OF COL_CURSOR;
        END IF;
      END LOOP;
    END IF;
  END IF;
EXCEPTION
  WHEN OTHERS THEN
    IF COL_CURSOR%ISOPEN THEN
      CLOSE COL_CURSOR;
    END IF;
    RAISE;
END;
/
