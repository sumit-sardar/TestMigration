create or replace procedure copy_content_to_prod
AS

 CURSOR CUR_GET_ITEM_IDS IS
   SELECT DISTINCT ISI.ITEM_ID ITEM_ID
     FROM OAS.PRODUCT@DBL_OAS_PROD           PROD,
          OAS.TEST_CATALOG@DBL_OAS_PROD      CAT,
          OAS.ITEM_SET_ANCESTOR@DBL_OAS_PROD ISA,
          OAS.ITEM_SET_ITEM@DBL_OAS_PROD     ISI
    WHERE PROD.PRODUCT_ID = CAT.PRODUCT_ID
      AND CAT.ITEM_SET_ID = ISA.ANCESTOR_ITEM_SET_ID
      AND ISA.ITEM_SET_ID = ISI.ITEM_SET_ID
      AND ISA.ITEM_SET_TYPE = 'TD'
      AND PROD.PARENT_PRODUCT_ID = 7500;

  TYPE ARR_OF_ITEM_IDS IS TABLE OF CUR_GET_ITEM_IDS%ROWTYPE;
  V_ARRAY_OF_ITEM_IDS ARR_OF_ITEM_IDS;
  V_ITEM_ID VARCHAR2(100);

begin

OPEN CUR_GET_ITEM_IDS;

    LOOP
      FETCH CUR_GET_ITEM_IDS BULK COLLECT
        INTO V_ARRAY_OF_ITEM_IDS LIMIT 500;

      EXIT WHEN(V_ARRAY_OF_ITEM_IDS.COUNT = 0);

      FOR I IN 1 .. V_ARRAY_OF_ITEM_IDS.COUNT LOOP

          V_ITEM_ID := V_ARRAY_OF_ITEM_IDS(I).ITEM_ID;


        BEGIN
         INSERT INTO AA_ITEM_DECRYPTED_TEMP@DBL_ADS_PROD (SELECT * FROM AA_ITEM_DECRYPTED WHERE AA_ITEM_ID = V_ITEM_ID);
         COMMIT;
         --DBMS_OUTPUT.PUT_LINE(V_ITEM_ID);
        EXCEPTION
          WHEN OTHERS THEN

            RAISE;
        END;

      END LOOP;
      EXIT WHEN CUR_GET_ITEM_IDS%NOTFOUND;
    END LOOP;

    CLOSE CUR_GET_ITEM_IDS;
end;
/