CREATE OR REPLACE PROCEDURE DROP_FRAMEWORK(CF_PRODUCT_ID PRODUCT.PRODUCT_ID%TYPE) is

  -- cursor getting all ST_PRODUCT from product
  CURSOR CUR_GET_ST_PRODUCT(V_CF_PRODUCT_ID PRODUCT.PRODUCT_ID%TYPE) IS
    SELECT PRODUCT_ID
      FROM PRODUCT
     WHERE PARENT_PRODUCT_ID = V_CF_PRODUCT_ID;
  -- cursor getting all TEST_ADMIN FROM ST_PRODUCT   

  CURSOR CUR_GET_TEST_ADMIN(V_ST_PRODUCT_ID PRODUCT.PRODUCT_ID%TYPE) IS
    SELECT TEST_ADMIN_ID
      FROM TEST_ADMIN
     WHERE PRODUCT_ID = V_ST_PRODUCT_ID;

  -- cursor getting all TEST_ADMIN FROM ST_PRODUCT   
  CURSOR CUR_GET_TEST_ROSTER(V_TEST_ADMIN_ID TEST_ADMIN.TEST_ADMIN_ID%TYPE) IS
    SELECT TEST_ROSTER_ID
      FROM TEST_ROSTER
     WHERE TEST_ADMIN_ID = V_TEST_ADMIN_ID;

  CURSOR CUR_GET_ITEM_SET_ID(V_ST_PRODUCT_ID PRODUCT.PRODUCT_ID%TYPE, V_ITEM_TYPE VARCHAR2) IS
    SELECT DISTINCT ISET.ITEM_SET_ID
      FROM ITEM_SET_PRODUCT ISP, ITEM_SET ISET
     WHERE ISP.ITEM_SET_ID = ISET.ITEM_SET_ID
       AND ISP.PRODUCT_ID = V_ST_PRODUCT_ID
       AND ISET.ITEM_SET_TYPE = V_ITEM_TYPE;

  CURSOR CUR_GET_ITEM(V_ITEM_ID ITEM.ITEM_ID%TYPE) IS
    SELECT DISTINCT ITEM_ID
      FROM ITEM_SET_ITEM
     WHERE ITEM_SET_ID = V_ITEM_ID;

BEGIN

  /************** HANDLING ALL ST PRODUCT   ******/
  FOR R_1 IN CUR_GET_ST_PRODUCT(CF_PRODUCT_ID) LOOP
    DBMS_OUTPUT.PUT_LINE('R_1');
  
    /*************************************************
    ******** HANDLING TEST ROSTER AND RESPONSE *******
    *************************************************/
  
    /************** HANDLING ALL TEST ADMIN   ******/
    FOR R_1_1 IN CUR_GET_TEST_ADMIN(R_1.PRODUCT_ID) LOOP
      DBMS_OUTPUT.PUT_LINE('R_1_1');
    
      /************** HANDLING ALL TEST ROSTER   ******/
      FOR R_1_1_1 IN CUR_GET_TEST_ROSTER(R_1_1.TEST_ADMIN_ID) LOOP
        DBMS_OUTPUT.PUT_LINE('R_1_1_1');
      
        -- DELETE SIS ENTRY 
        DELETE FROM STUDENT_ITEM_SET_STATUS
         WHERE TEST_ROSTER_ID = R_1_1_1.TEST_ROSTER_ID;
        -- DELETE ITEM_RESPONSE_CR  ENTRY
        DELETE FROM ITEM_RESPONSE_CR
         WHERE TEST_ROSTER_ID = R_1_1_1.TEST_ROSTER_ID;
        -- DELETE ITEM_RESPONSE_POINTS ENTRY
        DELETE FROM ITEM_RESPONSE_POINTS
         WHERE ITEM_RESPONSE_ID IN
               (SELECT ITEM_RESPONSE_ID
                  FROM ITEM_RESPONSE
                 WHERE test_roster_ID = R_1_1_1.TEST_ROSTER_ID);
        -- DELETE ITEM_RESPONSE ENTRY
        DELETE FROM ITEM_RESPONSE
         WHERE test_roster_ID = R_1_1_1.TEST_ROSTER_ID;
        -- DELETE TEST_ROSTER ENTRY
        DELETE FROM TEST_ROSTER
         WHERE TEST_ROSTER_ID = R_1_1_1.TEST_ROSTER_ID;
      END LOOP;
    
      -- DELETE TEST_ADMIN_ITEM_SET ENTRY
      DELETE FROM TEST_ADMIN_ITEM_SET
       WHERE TEST_ADMIN_ID = R_1_1.TEST_ADMIN_ID;
    
      -- DELETE TEST_ADMIN ENTRY
      DELETE FROM TEST_ADMIN WHERE TEST_ADMIN_ID = R_1_1.TEST_ADMIN_ID;
    
    END LOOP;
  
    /**************************************************************
    ******** HANDLING TEST CATALOG AND OAS ITEMSET STRUCTURE ******
    **************************************************************/
    DELETE FROM ORG_NODE_TEST_CATALOG WHERE PRODUCT_ID = R_1.PRODUCT_ID;
    DELETE FROM TEST_CATALOG WHERE PRODUCT_ID = R_1.PRODUCT_ID;
  
    /************** HANDLING ALL TC   ******/
    FOR R_1_2 IN CUR_GET_ITEM_SET_ID(R_1.PRODUCT_ID, 'TC') LOOP
      DBMS_OUTPUT.PUT_LINE('R_1_2');
      -- DELETE TC FROM ITEM_SET_PARENT  
      DELETE FROM ITEM_SET_PARENT
       WHERE PARENT_ITEM_SET_ID = R_1_2.ITEM_SET_ID;
      -- DELETE ITC FROM TEM_SET_ANCESTOR  
      DELETE FROM ITEM_SET_ANCESTOR WHERE ITEM_SET_ID = R_1_2.ITEM_SET_ID;
      DELETE FROM ITEM_SET_ANCESTOR
       WHERE ANCESTOR_ITEM_SET_ID = R_1_2.ITEM_SET_ID; 
    
      -- DELETE TC FROM ITEM_SET_PRODUCT 
      DELETE FROM ITEM_SET_PRODUCT WHERE ITEM_SET_ID = R_1_2.ITEM_SET_ID;
      -- DELETE TC FROM ITEM_SET 
      DELETE FROM ITEM_SET WHERE ITEM_SET_ID = R_1_2.ITEM_SET_ID;
    
    END LOOP;
  
    /************** HANDLING ALL TS   ******/
    FOR R_1_3 IN CUR_GET_ITEM_SET_ID(R_1.PRODUCT_ID, 'TS') LOOP
      DBMS_OUTPUT.PUT_LINE('R_1_3');
      -- DELETE TS FROM ITEM_SET_PARENT 
      DELETE FROM ITEM_SET_PARENT
       WHERE PARENT_ITEM_SET_ID = R_1_3.ITEM_SET_ID;
      -- DELETE TS FROM ITEM_SET_ANCESTOR  
       DELETE FROM ITEM_SET_ANCESTOR WHERE ITEM_SET_ID = R_1_3.ITEM_SET_ID;
      DELETE FROM ITEM_SET_ANCESTOR
       WHERE ANCESTOR_ITEM_SET_ID = R_1_3.ITEM_SET_ID; 
    
      -- DELETE TS FROM ITEM_SET_PRODUCT 
      DELETE FROM ITEM_SET_PRODUCT WHERE ITEM_SET_ID = R_1_3.ITEM_SET_ID;
      -- DELETE TS FROM ITEM_SET 
      DELETE FROM ITEM_SET WHERE ITEM_SET_ID = R_1_3.ITEM_SET_ID;
    
    END LOOP;
  
    /************** HANDLING ALL TD   ******/
    FOR R_1_4 IN CUR_GET_ITEM_SET_ID(R_1.PRODUCT_ID, 'TD') LOOP
      DBMS_OUTPUT.PUT_LINE('R_1_4');
      -- DELETE TD FROM ITEM_SET_ANCESTOR 
       DELETE FROM ITEM_SET_ANCESTOR WHERE ITEM_SET_ID = R_1_4.ITEM_SET_ID; 
    
      /************** HANDLING ALL ITEM   ******/
      FOR R_1_4_1 IN CUR_GET_ITEM(R_1_4.ITEM_SET_ID) LOOP
        DBMS_OUTPUT.PUT_LINE('R_1_4_1');
        -- DELETE ITEM FROM DATAPOINT
        DELETE FROM DATAPOINT WHERE ITEM_ID = R_1_4_1.ITEM_ID;
        -- DELETE ITEM FROM ITEM_SET_ITEM
        DELETE FROM ITEM_SET_ITEM WHERE ITEM_ID = R_1_4_1.ITEM_ID;
        
        --DELETE FROM SCORABLE_ITEM WHERE ITEM_ID = R_1_4_1.ITEM_ID;
        DELETE FROM SCORABLE_ITEM WHERE  ITEM_ID = R_1_4_1.ITEM_ID;
        
        -- DELETE ITEM FROM ITEM
        DELETE FROM ITEM WHERE ITEM_ID = R_1_4_1.ITEM_ID;
      END LOOP;
      
      -- DELETE TC FROM ITEM_SET_PRODUCT 
      DELETE FROM ITEM_SET_PRODUCT WHERE ITEM_SET_ID = R_1_4.ITEM_SET_ID;
    
     DELETE FROM SCORE_LOOKUP_ITEM_SET WHERE ITEM_SET_ID = R_1_4.ITEM_SET_ID;
      -- DELETE TD FROM ITEM_SET  
      DELETE FROM ITEM_SET WHERE ITEM_SET_ID = R_1_4.ITEM_SET_ID;
    
    END LOOP;
    
    -- DELETE PRODUCT FROM PRODUCT 
    DELETE FROM PROGRAM WHERE PRODUCT_ID = R_1.PRODUCT_ID;
   -- DELETE LOGO FROM PRODUCT_RESOURCE 
    DELETE FROM PRODUCT_RESOURCE WHERE PRODUCT_ID =R_1.PRODUCT_ID;
    -- DELETE CUSTOMER_REPORT_BRIDGE
    DELETE FROM CUSTOMER_REPORT_BRIDGE WHERE PRODUCT_ID =R_1.PRODUCT_ID;
    -- DELETE PRODUCT FROM PRODUCT 
    DELETE FROM PRODUCT WHERE PRODUCT_ID = R_1.PRODUCT_ID;
  
  END LOOP;
  
  /**************************************************************
   ********   HANDLING REPORTING ITEMSET STRUCTURE  **************
   **************************************************************/

  FOR R_2 IN CUR_GET_ITEM_SET_ID(CF_PRODUCT_ID, 'RE') LOOP
  DBMS_OUTPUT.PUT_LINE('R_2');
   DELETE FROM ITEM_SET_PRODUCT WHERE ITEM_SET_ID = R_2.ITEM_SET_ID;
   DELETE FROM ITEM_SET_PARENT WHERE PARENT_ITEM_SET_ID = R_2.ITEM_SET_ID;
   DELETE FROM ITEM_SET_PARENT WHERE ITEM_SET_ID = R_2.ITEM_SET_ID;
   DELETE FROM ITEM_SET_ANCESTOR WHERE ITEM_SET_ID = R_2.ITEM_SET_ID;
   DELETE FROM ITEM_SET_ANCESTOR WHERE ANCESTOR_ITEM_SET_ID = R_2.ITEM_SET_ID;
     
   DELETE FROM ITEM_SET WHERE ITEM_SET_ID = R_2.ITEM_SET_ID;
  END LOOP;
    DELETE FROM PROGRAM WHERE PRODUCT_ID = CF_PRODUCT_ID;
    DELETE FROM ITEM_SET_CATEGORY WHERE FRAMEWORK_PRODUCT_ID = CF_PRODUCT_ID; 
   
/*EXCEPTION
  WHEN OTHERS THEN
    ROLLBACK;
    RAISE;*/
END DROP_FRAMEWORK;
/
