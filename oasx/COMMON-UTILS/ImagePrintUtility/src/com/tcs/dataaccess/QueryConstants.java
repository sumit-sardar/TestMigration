package com.tcs.dataaccess;

public abstract interface QueryConstants
{
  public static final String GET_ALL_ITEM_LIST = "SELECT AA_ITEM_ID,ITEM_DELIVERY_XML_BLOB FROM AA_ITEM WHERE ";
  public static final String GET_ADS_ITEM_IDS = "SELECT TC.PRODUCT_ID      AS PRODUCT_ID,       TC.TEST_NAME       AS TEST_NAME,       TA.TEST_ADMIN_NAME AS TEST_SESSION_NAME,       TC.ITEM_SET_ID     AS TEST_CATALOG_ID,       ISA.ITEM_SET_ID    AS SUBTEST_ID,       ISET.ITEM_SET_NAME AS SUB_TEST_NAME,       I.ITEM_ID          AS ADS_ITEM_ID,       DERIVED.ITEM_NO    AS QUESTION_ORDER  FROM ITEM_SET_ANCESTOR ISA,       TEST_CATALOG TC,       ITEM_SET_ITEM ISI,       ITEM I,       ITEM_SET ISET,       TEST_ADMIN TA,       (SELECT (ISI.ITEM_SET_ID * 75 /*assumption: each subtest has max */ + ISI.ITEM_SORT_ORDER)  ITEM_NO, ISI.ITEM_ID ITEM_ID          FROM ITEM_SET_ITEM ISI,               (SELECT ROWNUM TD_NUM, ISP.ITEM_SET_ID ITEM_SET_ID                  FROM ITEM_SET_PARENT ISP                 WHERE PARENT_ITEM_SET_ID IN                       (SELECT TS_SET.ITEM_SET_ID                          FROM ITEM_SET TS_SET,                               (SELECT ISA.ITEM_SET_ID                                  FROM ITEM_SET_ANCESTOR ISA, TEST_ADMIN ADM                                 WHERE ISA.ANCESTOR_ITEM_SET_ID =                                      ADM.ITEM_SET_ID                                   AND ADM.TEST_ADMIN_ID = ?                                   AND ITEM_SET_TYPE = 'TS'                                 ORDER BY ITEM_SET_SORT_ORDER) TS_ORDER                         WHERE TS_SET.ITEM_SET_ID = TS_ORDER.ITEM_SET_ID)) TD_ORDER         WHERE TD_ORDER.ITEM_SET_ID = ISI.ITEM_SET_ID) DERIVED WHERE DERIVED.ITEM_ID = I.ITEM_ID   AND TC.ITEM_SET_ID = ISA.ANCESTOR_ITEM_SET_ID   AND ISA.ITEM_SET_TYPE = 'TD'   AND TC.PRODUCT_ID = 6116   AND ISA.ITEM_SET_ID = ISI.ITEM_SET_ID   AND ISI.ITEM_ID = I.ITEM_ID   AND ISA.ITEM_SET_ID = ISET.ITEM_SET_ID   AND I.ITEM_TYPE = 'CR'   AND ISET.SAMPLE = 'F'   AND TA.ITEM_SET_ID = TC.ITEM_SET_ID   AND I.ANSWER_AREA IS NULL   AND TA.TEST_ADMIN_ID = ? ORDER BY QUESTION_ORDER ASC";
  public static final String GET_ALL_ROSTER_DETAILS = "SELECT ST.FIRST_NAME || ' ' || ST.MIDDLE_NAME || ' ' || ST.LAST_NAME AS STUDENT_NAME,       ST.EXT_PIN1 PIN,       ST.STUDENT_ID AS STUDENT_ID,       ST.GRADE AS GRADE,       TR.TEST_ROSTER_ID AS TEST_ROSTER_ID,            OG.ORG_NODE_CODE,       OG.ORG_NODE_NAME  FROM TEST_ADMIN        TA,       TEST_ROSTER       TR,            STUDENT           ST,       ORG_NODE_STUDENT  ONS,       ORG_NODE          OG,       ORG_NODE_ANCESTOR ONA,       ORG_NODE_CATEGORY ONC WHERE TA.TEST_ADMIN_ID = ?   AND TA.TEST_ADMIN_ID = TR.TEST_ADMIN_ID   AND TR.TEST_COMPLETION_STATUS NOT IN ('SC', 'NT', 'IP')   AND ST.STUDENT_ID = TR.STUDENT_ID   AND ONS.STUDENT_ID = ST.STUDENT_ID   AND ONS.ORG_NODE_ID = TR.ORG_NODE_ID   AND ONA.ORG_NODE_ID = ONS.ORG_NODE_ID   AND ONC.CUSTOMER_ID = TA.CUSTOMER_ID   AND ONC.CATEGORY_LEVEL = 2   AND OG.ORG_NODE_CATEGORY_ID = ONC.ORG_NODE_CATEGORY_ID   AND OG.ORG_NODE_ID = ONA.ANCESTOR_ORG_NODE_ID   AND OG.ACTIVATION_STATUS = 'AC'   ORDER BY TR.TEST_ROSTER_ID";
  public static final String GET_DISTINCT_TEST_ADMIN_ID_PER_PRODUCT = " select distinct ta.test_admin_id   from test_roster       tr,        test_admin        ta,        org_node          district,        org_node_ancestor ona,       org_node_category onc  where tr.org_node_id = ona.org_node_id    and ona.ancestor_org_node_id = district.org_node_id    and district.org_node_category_id = onc.org_node_category_id    and lower(onc.category_name) in ('district', 'corporation')    and tr.customer_id = ?    and tr.test_admin_id = ta.test_admin_id    and ta.product_id = ?    and TR.TEST_COMPLETION_STATUS NOT IN ('SC', 'NT', 'IP') ";
  public static final String GET_RESPONSE_OBJECT_BY_ROSTER_ID = " select IRC.ITEM_ID              AS ITEM_ID,         IRC.CONSTRUCTED_RESPONSE AS CONSTRUCTED_RESPONSE                  from ITEM_RESPONSE_CR IRC         where IRC.TEST_ROSTER_ID = ?";
}

