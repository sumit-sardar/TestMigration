<?xml version='1.0' encoding='UTF-8'?>
<s0:definitions name="SchedulingWSServiceDefinitions" targetNamespace="http://services" xmlns="" xmlns:s0="http://schemas.xmlsoap.org/wsdl/" xmlns:s1="http://services" xmlns:s2="http://schemas.xmlsoap.org/wsdl/soap/">
  <s0:types>
    <xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="java:dto" xmlns:xs="http://www.w3.org/2001/XMLSchema">
      <xs:complexType name="SecureUser">
        <xs:annotation>
          <xs:documentation>/** 
 * This is the first object which passed into scheduling web service to perform authentication for security purpose 
 * This object contains information for user
 * The values which required from ACUITY through input are: 
 * userName, password, userType
 * @author Tai_Truong
 */</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" name="Password" nillable="true" type="xs:string"/>
          <xs:element minOccurs="1" name="UserId" nillable="true" type="xs:int"/>
          <xs:element minOccurs="1" name="UserName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="1" name="UserType" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Session">
        <xs:annotation>
          <xs:documentation>/** 
 * This is the second object which passed into scheduling web service to perform TN scheduling session for Acuity application 
 * This object contains information for session, accommodations, sub-tests, and students
 * The values which required from ACUITY through input are: 
 * productId, level, sessionName, startTime, endTime, startDate, endDate, hasBreak, timeZone, subtests, students   
 * The values which OAS platform populated in return are:  
 * status, sessionId, accessCode
 * @author Tai_Truong
 */</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" name="AccessCode" nillable="true" type="xs:string"/>
          <xs:element minOccurs="1" name="EndDate" nillable="true" type="xs:string"/>
          <xs:element minOccurs="1" name="EndTime" nillable="true" type="xs:string"/>
          <xs:element minOccurs="1" name="HasBreak" nillable="true" type="xs:boolean"/>
          <xs:element minOccurs="1" name="Level" nillable="true" type="xs:string"/>
          <xs:element minOccurs="1" name="ProductId" nillable="true" type="xs:int"/>
          <xs:element minOccurs="1" name="SessionId" nillable="true" type="xs:int"/>
          <xs:element minOccurs="1" name="SessionName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="1" name="StartDate" nillable="true" type="xs:string"/>
          <xs:element minOccurs="1" name="StartTime" nillable="true" type="xs:string"/>
          <xs:element minOccurs="1" name="Status" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="Students" nillable="true" type="java:Student" xmlns:java="java:dto"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="Subtests" nillable="true" type="java:Subtest" xmlns:java="java:dto"/>
          <xs:element minOccurs="1" name="TestId" nillable="true" type="xs:int"/>
          <xs:element minOccurs="1" name="TestLocation" nillable="true" type="xs:string"/>
          <xs:element minOccurs="1" name="TimeZone" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Student">
        <xs:annotation>
          <xs:documentation>/** 
 * This object contains information for students who will be created in OAS for an administration
 * The values which required from ACUITY through input are: 
 * assignmentId, firstName, lastName, gender, grade   
 * The values which OAS platform populated in return are:  
 * status, studentId, loginName, password
 * @author Tai_Truong
 */</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" name="AssignmentId" nillable="true" type="xs:string"/>
          <xs:element minOccurs="1" name="Birthdate" nillable="true" type="xs:dateTime"/>
          <xs:element minOccurs="1" name="FirstName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="1" name="Gender" nillable="true" type="xs:string"/>
          <xs:element minOccurs="1" name="Grade" nillable="true" type="xs:string"/>
          <xs:element minOccurs="1" name="LastName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="1" name="LoginName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="1" name="MiddleName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="1" name="Password" nillable="true" type="xs:string"/>
          <xs:element minOccurs="1" name="Status" nillable="true" type="xs:string"/>
          <xs:element minOccurs="1" name="StudentId" nillable="true" type="xs:int"/>
          <xs:element minOccurs="1" name="StudentKey" nillable="true" type="xs:long"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Subtest">
        <xs:annotation>
          <xs:documentation>/** 
 * This object contains information for sub-tests which describes a test structure.   
 * The values which required from ACUITY through input are: 
 * subtestName   
 * The values which OAS platform populated in return are:  
 * accessCode
 * @author Tai_Truong
 */</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" name="AccessCode" nillable="true" type="xs:string"/>
          <xs:element minOccurs="1" name="Duration" nillable="true" type="xs:int"/>
          <xs:element minOccurs="1" name="Order" nillable="true" type="xs:int"/>
          <xs:element minOccurs="1" name="SubTestKey" nillable="true" type="xs:long"/>
          <xs:element minOccurs="1" name="SubtestId" nillable="true" type="xs:int"/>
          <xs:element minOccurs="1" name="SubtestName" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://services" xmlns:xs="http://www.w3.org/2001/XMLSchema">
      <xs:import namespace="java:dto"/>
      <xs:element name="scheduleSession">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="user" type="java:SecureUser" xmlns:java="java:dto"/>
            <xs:element name="session" type="java:Session" xmlns:java="java:dto"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="scheduleSessionResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="return" type="java:Session" xmlns:java="java:dto"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:schema>
  </s0:types>
  <s0:message name="scheduleSession">
    <s0:part element="s1:scheduleSession" name="parameters"/>
  </s0:message>
  <s0:message name="scheduleSessionResponse">
    <s0:part element="s1:scheduleSessionResponse" name="parameters"/>
  </s0:message>
  <s0:portType name="SchedulingWS">
    <s0:operation name="scheduleSession" parameterOrder="parameters">
      <s0:input message="s1:scheduleSession"/>
      <s0:output message="s1:scheduleSessionResponse"/>
    </s0:operation>
  </s0:portType>
  <s0:binding name="SchedulingWSServiceSoapBinding" type="s1:SchedulingWS">
    <s2:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <s0:operation name="scheduleSession">
      <s2:operation style="document"/>
      <s0:input>
        <s2:body parts="parameters" use="literal"/>
      </s0:input>
      <s0:output>
        <s2:body parts="parameters" use="literal"/>
      </s0:output>
    </s0:operation>
  </s0:binding>
  <s0:service name="SchedulingWSService">
    <s0:port binding="s1:SchedulingWSServiceSoapBinding" name="SchedulingWSSoapPort">
      <s2:address location="http://nj09mhe5338.mhe.mhc:22611/SchedulingWebService/SchedulingWS"/>
    </s0:port>
  </s0:service>
</s0:definitions>