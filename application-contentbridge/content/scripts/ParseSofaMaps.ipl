use strict;
use Spreadsheet::ParseExcel;

my $debug = 0;
my $home = $ENV{HOME};
my $mode = 0777;
mkdir "$home/files", $mode unless -e "$home/files";

my @files = (
"CA Grade 3 Math Pre SOFA.xls",
"CA Grade 3 Reading Pre SOFA.xls",
"CA Grade 4 Math Pre SOFA.xls",
"CA Grade 4 Reading Pre SOFA.xls",
"CA Grade 5 Math Pre SOFA.xls",
"CA Grade 5 Reading Pre SOFA.xls",
"CA Grade 6 Math Pre SOFA.xls",
"CA Grade 6 Reading Pre SOFA.xls",
"CA Grade 78 Math Pre SOFA.xls",
"CA Grade 78 Reading Pre SOFA.xls",
"CO Grade 3 Math Pre SOFA.xls",
"CO Grade 3 Reading Pre SOFA.xls",
"CO Grade 4 Math Pre SOFA.xls",
"CO Grade 4 Reading Pre SOFA.xls",
"CO Grade 5 Math Pre SOFA.xls",
"CO Grade 5 Reading Pre SOFA.xls",
"CO Grade 6 Math Pre SOFA.xls",
"CO Grade 6 Reading Pre SOFA.xls",
"CO Grade 78 Math Pre SOFA.xls",
"CO Grade 78 Reading Pre SOFA.xls",
"FL Grade 3 Math Pre SOFA.xls",
"FL Grade 3 Reading Pre SOFA.xls",
"FL Grade 4 Math Pre SOFA.xls",
"FL Grade 4 Reading Pre SOFA.xls",
"FL Grade 5 Math Pre SOFA.xls",
"FL Grade 5 Reading Pre SOFA.xls",
"FL Grade 6 Math Pre SOFA.xls",
"FL Grade 6 Reading Pre SOFA.xls",
"FL Grade 78 Math Pre SOFA.xls",
"FL Grade 78 Reading Pre SOFA.xls",
"KY Grade 3 Math Pre SOFA.xls",
"KY Grade 3 Reading Pre SOFA.xls",
"KY Grade 4 Math Pre SOFA.xls",
"KY Grade 4 Reading Pre SOFA.xls",
"KY Grade 5 Math Pre SOFA.xls",
"KY Grade 5 Reading Pre SOFA.xls",
"KY Grade 6 Math Pre SOFA.xls",
"KY Grade 6 Reading Pre SOFA.xls",
"KY Grade 78 Math Pre SOFA.xls",
"KY Grade 78 Reading Pre SOFA.xls",
"NJ Grade 3 Math Pre SOFA.xls",
"NJ Grade 3 Reading Pre SOFA.xls",
"NJ Grade 4 Math Pre SOFA.xls",
"NJ Grade 4 Reading Pre SOFA.xls",
"NJ Grade 5 Math Pre SOFA.xls",
"NJ Grade 5 Reading Pre SOFA.xls",
"NJ Grade 6 Math Pre SOFA.xls",
"NJ Grade 6 Reading Pre SOFA.xls",
"NJ Grade 78 Math Pre SOFA.xls",
"NJ Grade 78 Reading Pre SOFA.xls",
"NY Grade 3 Math Pre SOFA.xls",
"NY Grade 3 Reading Pre SOFA.xls",
"NY Grade 4 Math Pre SOFA.xls",
"NY Grade 4 Reading Pre SOFA.xls",
"NY Grade 5 Math Pre SOFA.xls",
"NY Grade 5 Reading Pre SOFA.xls",
"NY Grade 6 Math Pre SOFA.xls",
"NY Grade 6 Reading Pre SOFA.xls",
"NY Grade 78 Math Pre SOFA.xls",
"NY Grade 78 Reading Pre SOFA.xls",
"OH Grade 3 Math Pre SOFA.xls",
"OH Grade 3 Reading Pre SOFA.xls",
"OH Grade 4 Math Pre SOFA.xls",
"OH Grade 4 Reading Pre SOFA.xls",
"OH Grade 5 Math Pre SOFA.xls",
"OH Grade 5 Reading Pre SOFA.xls",
"OH Grade 6 Math Pre SOFA.xls",
"OH Grade 6 Reading Pre SOFA.xls",
"OH Grade 78 Math Pre SOFA.xls",
"OH Grade 78 Reading Pre SOFA.xls",
"TX Grade 3 Math Pre SOFA.xls",
"TX Grade 3 Reading Pre SOFA.xls",
"TX Grade 4 Math Pre SOFA.xls",
"TX Grade 4 Reading Pre SOFA.xls",
"TX Grade 5 Math Pre SOFA.xls",
"TX Grade 5 Reading Pre SOFA.xls",
"TX Grade 6 Math Pre SOFA.xls",
"TX Grade 6 Reading Pre SOFA.xls",
"TX Grade 78 Math Pre SOFA.xls",
"TX Grade 78 Reading Pre SOFA.xls",
"WA Grade 3 Math Pre SOFA.xls",
"WA Grade 3 Reading Pre SOFA.xls",
"WA Grade 4 Math Pre SOFA.xls",
"WA Grade 4 Reading Pre SOFA.xls",
"WA Grade 5 Math Pre SOFA.xls",
"WA Grade 5 Reading Pre SOFA.xls",
"WA Grade 6 Math Pre SOFA.xls",
"WA Grade 6 Reading Pre SOFA.xls",
"WA Grade 78 Math Pre SOFA.xls",
"WA Grade 78 Reading Pre SOFA.xls",
"WI Grade 3 Math Pre SOFA.xls",
"WI Grade 3 Reading Pre SOFA.xls",
"WI Grade 4 Math Pre SOFA.xls",
"WI Grade 4 Reading Pre SOFA.xls",
"WI Grade 5 Math Pre SOFA.xls",
"WI Grade 5 Reading Pre SOFA.xls",
"WI Grade 6 Math Pre SOFA.xls",
"WI Grade 6 Reading Pre SOFA.xls",
"WI Grade 78 Math Pre SOFA.xls",
"WI Grade 78 Reading Pre SOFA.xls"
);


if ($ARGV[0] eq "-debug") {
	shift @ARGV;
	$debug = 1;
}

`bash`;
my $user = `whoami`;
chomp $user;

if ($user ne "iwuser") {
	print "Only iwuser can run this script!";
	exit 1;	
}

# Update CVS

chdir;
`pwd`;
if (-e "mappingdata") {
	chdir "mappingdata";
	`cvs update sofa`;
	chdir "sofa";
} 
else {
	`cvs co mappingdata`;
	chdir "mappingdata/sofa";
} 

&ParseSofaExcel(@files);

sub ParseSofaExcel {
	my ($oWks, $sth, $val_itemid);

    	my $oExcel = new Spreadsheet::ParseExcel;
    	foreach my $i (@_) {
    		# print "FILE: $i\n";
    		my $oBook = $oExcel->Parse($i);
		my($iR, $iC, $oWkS, $oWkC, $orig_col, $sss_col, $result);
		my $orig_length = 0;
		my $sss_length = 0;
		my @orig_items = ();
		my @sss_items = ();
		if ($debug == 1) {
			print "FILE  :", $oBook->{File} , "\n";
			print "COUNT :", $oBook->{SheetCount} , "\n";
			print "AUTHOR:", $oBook->{Author} , "\n";
		}
		for(my $iSheet=0; $iSheet < $oBook->{SheetCount} ; $iSheet++) {
			$oWkS = $oBook->{Worksheet}[$iSheet];
			next unless $oWkS->{Name} =~ /Form/i && $oWkS->{Name} =~ /\sA/i;
			# print "--------- SHEET:", $oWkS->{Name}, "\n";
			
		ROW:	for(my $iR = $oWkS->{MinRow} + 1 ;
				defined $oWkS->{MaxRow} && $iR <= $oWkS->{MaxRow} ; $iR++) {
				
		COL:		for(my $iC = $oWkS->{MinCol} ;
				    defined $oWkS->{MaxCol} && $iC <= $oWkS->{MaxCol} ; $iC++) {
				    $oWkC = $oWkS->{Cells}[$iR][$iC];
				    if (!(defined $orig_col) || !(defined $sss_col)) {
				    	 if ($oWkC->Value =~ /Original/i) {
				    	 	#print "ORIG COLUMN NAME: " . $oWkC->Value . "\n";
				    	 	$orig_col = $iC;
				    	 }
				    	 elsif ($oWkC->Value =~ /SSS/i && $oWkC->Value =~ /Item/i) {
					 	#print "SSS COLUMN NAME: " . $oWkC->Value . "\n";
				    	 	$sss_col = $iC;
				    	 }
				    	 else {
				    	 	next;
				    	 }
				    }
				    else {
				    	if ($iC == $orig_col && $orig_length < 20 && defined $oWkC->Value) {
				    		push @orig_items, $oWkC->Value;
				    		$orig_length = @orig_items;
				    		next ROW;
				    	}
				        elsif ($iC == $sss_col && $orig_length == 20 && $sss_length < 20 && defined $oWkC->Value) {
				    		push @sss_items, $oWkC->Value;
				    		$sss_length = @sss_items;
				    		next ROW;
				    	}
				        else {
				   		next;
				   	}
				    }
				}
			#	
			#	if ($itemid && $benchmark && length($itemid->{Val}) > 6  ) {
			#		$val_itemid = $itemid->{Val};
			#		chomp $val_itemid;
			#		$val_itemid .= "%";
			#		$val_itemid =~ s/\s//;
			#	}
			}
		}
		#print "ORIGINAL COLUMN: $orig_col\nSSS COLUMN: $sss_col\n";
                my $new_file = $i;
                $new_file =~ s/\s/-/mg;
                $new_file =~ s/xls$/txt/;
                open(NEW_FILE, ">$home/files/$new_file");
                
                foreach $result (@orig_items) {
                	$result =~ s/^([^\s]+).*/$1/i;
                        print "$result,$i\n";
                        print NEW_FILE "$result\n";
                }
                foreach $result (@sss_items) {
                        print "$result,$i\n";
                        print NEW_FILE "$result\n";
                }
		#print "ORIGINAL ITEMS:\n" . join("\n", @orig_items) . "\n";
		#print "SSS ITEMS:\n" . join("\n", @sss_items) . "\n";
	}
}
